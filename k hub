LocalScript in StarterPlayerScripts
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

local localPlayer = Players.LocalPlayer
local EquipSlapEvent = ReplicatedStorage:WaitForChild("EquipSlapEvent")

-- Debug function to print messages
local function debugPrint(message)
    print("[InfYieldGui] " .. message)
end

-- Wait for PlayerGui
local success, result = pcall(function()
    local playerGui = localPlayer:WaitForChild("PlayerGui", 5) -- Wait up to 5 seconds
    if not playerGui then
        error("PlayerGui not found")
    end
    return playerGui
end)

if not success then
    debugPrint("Error: " .. tostring(result))
    return
end

local playerGui = result
debugPrint("PlayerGui found, creating GUIs")

-- Create Notification ScreenGui (for Infinite Yield activation)
local notifyGui = Instance.new("ScreenGui")
notifyGui.Name = "InfYieldNotifyGui"
notifyGui.Parent = playerGui
notifyGui.ResetOnSpawn = false
notifyGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
notifyGui.DisplayOrder = 101 -- Above main GUI

-- Create Frame for Notification GUI
local notifyFrame = Instance.new("Frame")
notifyFrame.Size = UDim2.new(0, 300, 0, 100)
notifyFrame.Position = UDim2.new(0.5, -150, 0.3, 0) -- Centered horizontally, slightly above center
notifyFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20) -- Dark theme background
notifyFrame.BackgroundTransparency = 0.2
notifyFrame.BorderSizePixel = 0
notifyFrame.Parent = notifyGui

-- Add UICorner for rounded edges
local notifyCorner = Instance.new("UICorner")
notifyCorner.CornerRadius = UDim.new(0, 12)
notifyCorner.Parent = notifyFrame

-- Add UIStroke for outline
local notifyStroke = Instance.new("UIStroke")
notifyStroke.Color = Color3.fromRGB(100, 100, 100) -- Subtle gray outline
notifyStroke.Thickness = 2
notifyStroke.Transparency = 0.5
notifyStroke.Parent = notifyFrame

-- Add shadow effect using UIStroke
local notifyShadow = Instance.new("UIStroke")
notifyShadow.Color = Color3.fromRGB(0, 0, 0) -- Black for shadow
notifyShadow.Thickness = 4
notifyShadow.Transparency = 0.7
notifyShadow.Parent = notifyFrame

-- Create TextLabel for notification message
local notifyTextLabel = Instance.new("TextLabel")
notifyTextLabel.Size = UDim2.new(1, 0, 1, 0)
notifyTextLabel.BackgroundTransparency = 1
notifyTextLabel.Text = "To activate Inf Yield, tap C"
notifyTextLabel.TextColor3 = Color3.fromRGB(220, 220, 220) -- Softer white for dark theme
notifyTextLabel.TextScaled = true
notifyTextLabel.Font = Enum.Font.GothamBold
notifyTextLabel.TextSize = 24
notifyTextLabel.Parent = notifyFrame

-- Function to fade out and destroy the Notification GUI
local function fadeOutNotifyGui()
    debugPrint("Starting notification fade-out")
    local tweenInfo = TweenInfo.new(
        1, -- Duration of fade
        Enum.EasingStyle.Sine,
        Enum.EasingDirection.InOut
    )
    local fadeTween = TweenService:Create(notifyFrame, tweenInfo, {BackgroundTransparency = 1})
    local textTween = TweenService:Create(notifyTextLabel, tweenInfo, {TextTransparency = 1})
    local strokeTween = TweenService:Create(notifyStroke, tweenInfo, {Transparency = 1})
    local shadowTween = TweenService:Create(notifyShadow, tweenInfo, {Transparency = 1})
    
    fadeTween:Play()
    textTween:Play()
    strokeTween:Play()
    shadowTween:Play()
    
    fadeTween.Completed:Connect(function()
        debugPrint("Notification fade-out complete, destroying GUI")
        notifyGui:Destroy()
    end)
end

-- Wait 6 seconds, then fade out Notification GUI
debugPrint("Notification GUI created, waiting 6 seconds before fade-out")
wait(6)
fadeOutNotifyGui()

-- Create Slap Giver ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "GloveGiverGUI"
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
screenGui.DisplayOrder = 100
screenGui.Parent = playerGui

-- Main container with gradient and shadow
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 400, 0, 500)
mainFrame.Position = UDim2.new(0.5, -200, 0.5, -250)
mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
mainFrame.BorderSizePixel = 0
mainFrame.ClipsDescendants = true
mainFrame.Parent = screenGui

local corner = Instance.new("UICorner")
corner.CornerRadius = UDim.new(0, 12)
corner.Parent = mainFrame

local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(45, 45, 60)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(25, 25, 35))
})
gradient.Rotation = 45
gradient.Parent = mainFrame

-- Header with glow effect
local header = Instance.new("Frame")
header.Size = UDim2.new(1, 0, 0, 60)
header.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
header.BorderSizePixel = 0
header.Parent = mainFrame

local headerCorner = Instance.new("UICorner")
headerCorner.CornerRadius = UDim.new(0, 12)
headerCorner.Parent = header

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 1, 0)
title.Text = "✨ ALL SLAPS GIVER ✨"
title.TextColor3 = Color3.fromRGB(255, 215, 0)
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.Parent = header

local subtitle = Instance.new("TextLabel")
subtitle.Size = UDim2.new(1, 0, 0, 20)
subtitle.Position = UDim2.new(0, 0, 0.6, 0)
subtitle.Text = "All 25 slap types available"
subtitle.TextColor3 = Color3.fromRGB(180, 180, 200)
subtitle.BackgroundTransparency = 1
subtitle.Font = Enum.Font.Gotham
subtitle.TextSize = 14
subtitle.Parent = header

-- Input field with modern design
local inputContainer = Instance.new("Frame")
inputContainer.Size = UDim2.new(0.9, 0, 0, 80)
inputContainer.Position = UDim2.new(0.05, 0, 0.2, 0)
inputContainer.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
inputContainer.BorderSizePixel = 0
inputContainer.Parent = mainFrame

local inputCorner = Instance.new("UICorner")
inputCorner.CornerRadius = UDim.new(0, 8)
inputCorner.Parent = inputContainer

local inputLabel = Instance.new("TextLabel")
inputLabel.Size = UDim2.new(1, 0, 0, 30)
inputLabel.Text = "SLAP NAME"
inputLabel.TextColor3 = Color3.fromRGB(200, 200, 220)
inputLabel.BackgroundTransparency = 1
inputLabel.Font = Enum.Font.GothamBold
inputLabel.TextSize = 14
inputLabel.Parent = inputContainer

local gloveInput = Instance.new("TextBox")
gloveInput.Size = UDim2.new(0.9, 0, 0, 40)
gloveInput.Position = UDim2.new(0.05, 0, 0.4, 0)
gloveInput.PlaceholderText = "Enter slap name..."
gloveInput.Text = "Error"
gloveInput.TextColor3 = Color3.fromRGB(255, 255, 255)
gloveInput.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
gloveInput.Font = Enum.Font.Gotham
gloveInput.TextSize = 16
gloveInput.Parent = inputContainer

local inputFieldCorner = Instance.new("UICorner")
inputFieldCorner.CornerRadius = UDim.new(0, 6)
inputFieldCorner.Parent = gloveInput

-- ALL SLAP NAMES FROM YOUR LIST
local allSlaps = {
    "AppleSlap", "BalloonSlap", "BigSlap", "BlockSlap", "BlowSlap",
    "BrickSlap", "DefaultSlap", "DiamondSlap", "DiceSlap", "Error",
    "FruitSlap", "GalaxySlap", "God's Hand", "GoldSlap", "LuckySlap",
    "MagnetSlap", "MailSlap", "PoisonSlap", "RainbowLuckySlap", "SpinSlap",
    "StreakSlap", "StunSlap", "SwapperSlap", "TixSlap", "TripleSlap"
}

-- Scrolling frame for all slaps
local scrollFrame = Instance.new("ScrollingFrame")
scrollFrame.Size = UDim2.new(0.9, 0, 0, 250)
scrollFrame.Position = UDim2.new(0.05, 0, 0.35, 0)
scrollFrame.BackgroundTransparency = 1
scrollFrame.ScrollBarThickness = 6
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, math.ceil(#allSlaps / 3) * 40)
scrollFrame.Parent = mainFrame

local gridLabel = Instance.new("TextLabel")
gridLabel.Size = UDim2.new(1, 0, 0, 20)
gridLabel.Text = "ALL SLAP TYPES (" .. #allSlaps .. ")"
gridLabel.TextColor3 = Color3.fromRGB(200, 200, 220)
gridLabel.BackgroundTransparency = 1
gridLabel.Font = Enum.Font.GothamBold
gridLabel.TextSize = 14
gridLabel.Parent = scrollFrame

-- Color palette for buttons
local buttonColors = {
    Color3.fromRGB(255, 100, 100),    -- Red
    Color3.fromRGB(100, 200, 100),    -- Green
    Color3.fromRGB(100, 150, 255),    -- Blue
    Color3.fromRGB(255, 180, 70),     -- Orange
    Color3.fromRGB(200, 100, 255),    -- Purple
    Color3.fromRGB(255, 215, 0),      -- Gold
    Color3.fromRGB(70, 220, 220),     -- Cyan
    Color3.fromRGB(255, 100, 150)     -- Pink
}

-- Create buttons for all slaps
for i, slap in ipairs(allSlaps) do
    local row = math.ceil(i / 3)
    local col = (i - 1) % 3 + 1
    
    local slapButton = Instance.new("TextButton")
    slapButton.Size = UDim2.new(0.3, 0, 0, 35)
    slapButton.Position = UDim2.new((col - 1) * 0.33, 0, 0.05 + (row - 1) * 0.1, 0)
    slapButton.Text = slap
    slapButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    slapButton.BackgroundColor3 = buttonColors[(i - 1) % #buttonColors + 1]
    slapButton.Font = Enum.Font.GothamBold
    slapButton.TextSize = 12
    slapButton.TextWrapped = true
    slapButton.Parent = scrollFrame
    
    local buttonCorner = Instance.new("UICorner")
    buttonCorner.CornerRadius = UDim.new(0, 6)
    buttonCorner.Parent = slapButton
    
    slapButton.MouseButton1Click:Connect(function()
        gloveInput.Text = slap
        tweenButton(slapButton)
    end)
end

-- Give button with hover effects
local giveButton = Instance.new("TextButton")
giveButton.Size = UDim2.new(0.9, 0, 0, 50)
giveButton.Position = UDim2.new(0.05, 0, 0.82, 0)
giveButton.Text = "🎯 GIVE SLAP"
giveButton.TextColor3 = Color3.fromRGB(255, 255, 255)
giveButton.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
giveButton.Font = Enum.Font.GothamBold
giveButton.TextSize = 18
giveButton.Parent = mainFrame

local giveButtonCorner = Instance.new("UICorner")
giveButtonCorner.CornerRadius = UDim.new(0, 8)
giveButtonCorner.Parent = giveButton

local giveButtonGradient = Instance.new("UIGradient")
giveButtonGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 170, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 120, 255))
})
giveButtonGradient.Rotation = 90
giveButtonGradient.Parent = giveButton

-- Slap Farm button with hover effects
local slapFarmButton = Instance.new("TextButton")
slapFarmButton.Size = UDim2.new(0.9, 0, 0, 50)
slapFarmButton.Position = UDim2.new(0.05, 0, 0.9, 0)
slapFarmButton.Text = "🌾 START SLAP FARM"
slapFarmButton.TextColor3 = Color3.fromRGB(255, 255, 255)
slapFarmButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
slapFarmButton.Font = Enum.Font.GothamBold
slapFarmButton.TextSize = 18
slapFarmButton.Parent = mainFrame

local slapFarmButtonCorner = Instance.new("UICorner")
slapFarmButtonCorner.CornerRadius = UDim.new(0, 8)
slapFarmButtonCorner.Parent = slapFarmButton

local slapFarmButtonGradient = Instance.new("UIGradient")
slapFarmButtonGradient.Color = ColorSequence.new({
    ColorSequenceKeypoint.new(0, Color3.fromRGB(220, 60, 60)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(180, 40, 40))
})
slapFarmButtonGradient.Rotation = 90
slapFarmButtonGradient.Parent = slapFarmButton

-- Status label
local statusLabel = Instance.new("TextLabel")
statusLabel.Size = UDim2.new(0.9, 0, 0, 20)
statusLabel.Position = UDim2.new(0.05, 0, 0.76, 0)
statusLabel.Text = "Ready to give any slap"
statusLabel.TextColor3 = Color3.fromRGB(150, 150, 170)
statusLabel.BackgroundTransparency = 1
statusLabel.Font = Enum.Font.Gotham
statusLabel.TextSize = 14
statusLabel.Parent = mainFrame

-- Animation functions
local function tweenButton(button)
    local originalSize = button.Size
    local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    
    local scaleUp = TweenService:Create(button, tweenInfo, {Size = originalSize + UDim2.new(0, 5, 0, 5)})
    local scaleDown = TweenService:Create(button, tweenInfo, {Size = originalSize})
    
    scaleUp:Play()
    scaleUp.Completed:Connect(function()
        scaleDown:Play()
    end)
end

local function animateGive()
    local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Back, Enum.EasingDirection.Out)
    local scaleUp = TweenService:Create(giveButton, tweenInfo, {Size = UDim2.new(0.85, 0, 0, 45)})
    local scaleDown = TweenService:Create(giveButton, tweenInfo, {Size = UDim2.new(0.9, 0, 0, 50)})
    
    scaleUp:Play()
    scaleUp.Completed:Connect(function()
        scaleDown:Play()
    end)
end

local function animateSlapFarm()
    local tweenInfo = TweenInfo.new(0.2, Enum.EasingStyle.Back, Enum.EasingDirection.Out)
    local scaleUp = TweenService:Create(slapFarmButton, tweenInfo, {Size = UDim2.new(0.85, 0, 0, 45)})
    local scaleDown = TweenService:Create(slapFarmButton, tweenInfo, {Size = UDim2.new(0.9, 0, 0, 50)})
    
    scaleUp:Play()
    scaleUp.Completed:Connect(function()
        scaleDown:Play()
    end)
end

-- Slap Farm functionality
local slapFarmRunning = false
local slapFarmCoroutine = nil

local function slapFarmLoop()
    while slapFarmRunning do
        local success, errorMsg = pcall(function()
            if not localPlayer.Character then return end
            local slapEvent = localPlayer.Character:WaitForChild("DefaultSlap"):WaitForChild("Event")
            
            for i, v in pairs(Players:GetPlayers()) do
                if v ~= localPlayer and v.Character then
                    local args = {
                        "slash",
                        v.Character,
                        Vector3.new(-8.914801597595215, 2.4258898179141397e-07, 4.53059720993042)
                    }
                    slapEvent:FireServer(unpack(args))
                end
            end
        end)
        
        if not success then
            statusLabel.Text = "❌ Slap Farm Error: " .. tostring(errorMsg)
            statusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
            slapFarmRunning = false
            slapFarmButton.Text = "🌾 START SLAP FARM"
            slapFarmButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
            slapFarmButtonGradient.Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.fromRGB(220, 60, 60)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(180, 40, 40))
            })
        end
        
        task.wait() -- Small delay to prevent excessive server calls
    end
end

local function toggleSlapFarm()
    slapFarmRunning = not slapFarmRunning
    if slapFarmRunning then
        slapFarmButton.Text = "🛑 STOP SLAP FARM"
        slapFarmButton.BackgroundColor3 = Color3.fromRGB(50, 200, 50)
        slapFarmButtonGradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(60, 220, 60)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(40, 180, 40))
        })
        statusLabel.Text = "🌾 Slap Farm running"
        statusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
        slapFarmCoroutine = coroutine.create(slapFarmLoop)
        coroutine.resume(slapFarmCoroutine)
    else
        slapFarmButton.Text = "🌾 START SLAP FARM"
        slapFarmButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
        slapFarmButtonGradient.Color = ColorSequence.new({
            ColorSequenceKeypoint.new(0, Color3.fromRGB(220, 60, 60)),
            ColorSequenceKeypoint.new(1, Color3.fromRGB(180, 40, 40))
        })
        statusLabel.Text = "🌾 Slap Farm stopped"
        statusLabel.TextColor3 = Color3.fromRGB(150, 150, 170)
        slapFarmRunning = false
    end
    animateSlapFarm()
end

-- Give slap function
local function giveSlap()
    local slapName = gloveInput.Text
    if slapName == "" then return end
    
    local args = {
        [1] = slapName
    }
    
    local success, errorMsg = pcall(function()
        EquipSlapEvent:FireServer(unpack(args))
    end)
    
    if success then
        statusLabel.Text = "✅ " .. slapName .. " given!"
        statusLabel.TextColor3 = Color3.fromRGB(100, 255, 100)
    else
        statusLabel.Text = "❌ Error: " .. tostring(errorMsg)
        statusLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
    end
    
    animateGive()
end

-- Connect events
giveButton.MouseButton1Click:Connect(giveSlap)
gloveInput.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        giveSlap()
    end
end)
slapFarmButton.MouseButton1Click:Connect(toggleSlapFarm)

-- Hover effects for Give button
giveButton.MouseEnter:Connect(function()
    giveButton.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
end)

giveButton.MouseLeave:Connect(function()
    giveButton.BackgroundColor3 = Color3.fromRGB(0, 150, 255)
end)

-- Hover effects for Slap Farm button
slapFarmButton.MouseEnter:Connect(function()
    slapFarmButton.BackgroundColor3 = slapFarmRunning and Color3.fromRGB(60, 220, 60) or Color3.fromRGB(220, 60, 60)
end)

slapFarmButton.MouseLeave:Connect(function()
    slapFarmButton.BackgroundColor3 = slapFarmRunning and Color3.fromRGB(50, 200, 50) or Color3.fromRGB(200, 50, 50)
end)

-- Drag functionality
local dragging = false
local dragStart = nil
local startPos = nil

header.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = mainFrame.Position
    end
end)

header.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, 
                                      startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

header.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = false
    end
end)

-- Infinite Yield activation on 'C' key press
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.C and not gameProcessed then
        debugPrint("Activating Infinite Yield")
        loadstring(game:HttpGet("https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source"))()
    end
end)
